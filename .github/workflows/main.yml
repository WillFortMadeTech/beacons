name: CI/CD Pipeline

on: [workflow_dispatch, push]

jobs:
  terraform_lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform Lint
        run: terraform fmt --recursive --check

  prettier_check:
    name: Prettier check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Prettier check
        run: |
          npm ci
          npm run format:check

  get_docker_image_tags:
    name: Get Docker image tags
    runs-on: ubuntu-latest
    outputs:
      webapp_commit_hash: ${{ steps.get_webapp_commit_hash.outputs.webapp_commit_hash }}
      service_commit_hash: ${{ steps.get_service_commit_hash.outputs.service_commit_hash }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "mcagov/beacons-webapp"
      - id: get_webapp_commit_hash
        name: Get commit hash from Webapp repo
        run: echo "::set-output name=webapp_commit_hash::$(git rev-parse HEAD)"
      - uses: actions/checkout@v2
        with:
          repository: "mcagov/beacons-service"
      - id: get_service_commit_hash
        name: Get commit hash from Service repo
        run: echo "::set-output name=service_commit_hash::$(git rev-parse HEAD)"

  save_git_hashes_for_dev:
    needs: [get_docker_image_tags]
    name: Save image tags for dev environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "service_image_tag = '${{ needs.get_docker_image_tags.outputs.service_commit_hash }}'" > dev.images.tfvars
          echo "webapp_image_tag = '${{ needs.get_docker_image_tags.outputs.webapp_commit_hash }}'" >> dev.images.tfvars
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update image tags used in dev environment [skip ci]"
          git push

  terraform_deploy:
    needs: [terraform_lint, get_docker_image_tags, prettier_check]
    if: github.ref == 'refs/heads/main'
    name: Terraform Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Deploy
        env:
          TF_VAR_service_image_tag: ${{ needs.get_docker_image_tags.outputs.service_commit_hash }}
          TF_VAR_webapp_image_tag: ${{ needs.get_docker_image_tags.outputs.webapp_commit_hash }}
          TF_VAR_db_password: ${{ secrets.DEV_DB_PASSWORD }}
        run: terraform apply -auto-approve
