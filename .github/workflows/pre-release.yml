name: Publish pre-release version to dev environment

on:
  release:
    types:
      - prereleased

env:
  TERRAFORM_VERSION: 1.0.0

jobs:
  unit_tests:
    name: Lamdba Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: "14"
      - name: Run tests
        run: |
          cd terraform/trello-lambda
          npm ci
          npm run test

  terraform_lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Lint
        run: terraform fmt --recursive --check

  prettier_check:
    name: Prettier check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Prettier check
        run: |
          npm ci
          npm run format:check

  publish_webapp_version:
    name: Webapp
    uses: ./.github/workflows/publish-webapp-image.yml
    with:
      tag: ${{ github.event.release.tag_name }}
      working_directory: webapp

  publish_service_version:
    name: Service
    uses: ./.github/workflows/publish-service-image.yml
    with:
      tag: ${{ github.event.release.tag_name }}
      working_directory: service

  build_opensearch_proxy_container:
    name: Build and Push Opensearch Proxy Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to ECR
        uses: docker/login-action@v1.10.0
        with:
          registry: 232705206979.dkr.ecr.eu-west-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and Push
        uses: docker/build-push-action@v2.7.0
        with:
          context: ./terraform/opensearch-proxy
          push: true
          tags: 232705206979.dkr.ecr.eu-west-2.amazonaws.com/opensearch-proxy:${{ github.sha }}

  terraform_deploy_dev:
    needs:
      [
        terraform_lint,
        publish_webapp_version,
        publish_service_version,
        prettier_check,
        build_opensearch_proxy_container,
      ]
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_WORKSPACE: dev
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Deploy
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_gov_notify_api_key: ${{ secrets.GOV_NOTIFY_API_KEY }}
          TF_VAR_webapp_azure_ad_client_secret: ${{ secrets.WEBAPP_CLIENT_SECRET }}
          TF_VAR_webapp_azure_b2c_client_secret: ${{ secrets.AZURE_B2C_CLIENT_SECRET }}
          TF_VAR_webapp_azure_b2c_next_auth_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_service_basic_auth_username: ${{ secrets.SERVICE_BASIC_AUTH_USERNAME }}
          TF_VAR_service_basic_auth_password: ${{ secrets.SERVICE_BASIC_AUTH_PASSWORD }}
          TF_VAR_alert_email_address: ${{ secrets.ALERT_EMAIL_ADDRESS }}
          TF_VAR_aws_account_number: ${{ secrets.AWS_ACCOUNT_NUMBER }}
          TF_VAR_trello_api_key: ${{ secrets.TRELLO_API_KEY }}
          TF_VAR_trello_token: ${{ secrets.TRELLO_TOKEN }}
          TF_VAR_trello_list_id: ${{ secrets.TRELLO_LIST_ID }}
          TF_VAR_opensearch_master_user_name: ${{ secrets.OPENSEARCH_USERNAME }}
          TF_VAR_opensearch_master_user_password: ${{ secrets.OPENSEARCH_PASSWORD }}
          TF_VAR_opensearch_proxy_image_tag: 232705206979.dkr.ecr.eu-west-2.amazonaws.com/opensearch-proxy:${{ github.sha }}
          TF_VAR_opensearch_dashboards_sso_client_secret: ${{ secrets.OPENSEARCH_DASHBOARDS_SSO_CLIENT_SECRET }}
        run: terraform apply -input=false -auto-approve -var-file=dev.tfvars -var-file=dev.images.tfvars
