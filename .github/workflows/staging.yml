name: Deploy Staging

on:
  workflow_dispatch:
    inputs:
      deployMain:
        description: "Deploy main? true/false"
        required: false
        default: "true"

jobs:
  save_docker_image_tags_staging:
    if: github.event.inputs.deployMain == 'true'
    name: Copy and save image tags for staging environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Save image tags for staging environment
      - run: |
          cd terraform
          cp dev.images.tfvars staging.images.tfvars
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Copy and save image tags for use in staging environment [skip ci]" & git push

  terraform_deploy_staging:
    if: always()
    needs: [save_docker_image_tags_staging]
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: staging
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_WORKSPACE: staging
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform format
        run: terraform fmt
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Deploy
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform apply -auto-approve -var-file=staging.tfvars -var-file=staging.images.tfvars
